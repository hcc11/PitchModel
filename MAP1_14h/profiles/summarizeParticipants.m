% summarizeParticipants
%  generates statistics for who took part
% The data must already exist in participantCompendium
%  participantCompendium is created by readParticipantList

load participantCompendium

fprintf('\n')
disp('Participant summary')

fprintf('\n')
IH_NH=[participant.impaired];

% identify participants for whom queries are pending
% they are not included in any analysis
iffy=[participant.iffy];

%% head counts
disp (['number of participants = ' num2str(length(participant))])
disp (['number of iffys = ' num2str(sum(iffy))])
impaired= IH_NH & ~iffy;
normal= ~IH_NH & ~iffy;
disp (['number of impaired /normal hearing used = ' ...
    num2str(sum(impaired)) ' / ' ...
    num2str(sum(normal)) ])

%% gender
male=[participant.male];
female=~male;
numMales=sum(male & ~iffy);
numFemales=sum(female & ~iffy);
fprintf('\n')
disp (['number of  males /females = ' ...
    num2str(numMales) ' / ' ...
    num2str(numFemales) ])
disp (['number of impaired males /females = ' ...
    num2str(sum(male & impaired )) ' / ' ...
    num2str(sum(female & impaired)) ])
disp (['number of normal males/females = ' ...
    num2str(sum(male & normal)) ' / ' ...
    num2str(sum(female & normal)) ])

%% age
age=[participant.age];
ageImpaired= age(impaired);
ageNormal= age(normal);
disp (['average (STD) age impaired/ normal = ' ...
    num2str(mean(ageImpaired(~isnan(ageImpaired))), '%3.1f')  ' (' ...
    num2str(std(ageImpaired(~isnan(ageImpaired))), '%3.1f')  ')' ...
    ' / ' ...
    num2str(mean(ageNormal(~isnan(ageNormal))), '%3.1f') ' (' ...
    num2str(std(ageNormal(~isnan(ageNormal))), '%3.1f') ' )' ...
    ])
disp (['average (range) age impaired/ normal = ' ...
    num2str(mean(ageImpaired(~isnan(ageImpaired))), '%3.1f')  ' (' ...
    num2str([min(ageImpaired(~isnan(ageImpaired))) max(ageImpaired(~isnan(ageImpaired)))], '%3.1f ')  ')'   ' / ' ...
    num2str(mean(ageNormal(~isnan(ageNormal))), '%3.1f') ' (' ...
    num2str([min(ageNormal(~isnan(ageNormal))) max(ageNormal(~isnan(ageNormal)))], '%3.1f ')  ')'   ' / ' ...
    ])

%% tinnitus
tinnitus=[participant.tinnitus];
idxTinnitus=(tinnitus==1) & impaired;
idxNoTinnitus=(tinnitus==0) & impaired;
idxTinnitusUnsure=isnan(tinnitus) & impaired;
fprintf('\n')
disp (['impaired with tinnitus yes/no/not determined = ' ...
    num2str(sum(idxTinnitus)) ' / ' ...
    num2str(sum(idxNoTinnitus))  ' / ' ...
    num2str(sum(idxTinnitusUnsure))  ])
idxTinnitus=(tinnitus==1) & normal;
idxNoTinnitus=(tinnitus==0) & normal;
idxTinnitusUnsure=isnan(tinnitus) & normal;
disp (['normal with tinnitus yes/no/not determined = ' ...
    num2str(sum(idxTinnitus)) ' / ' ...
    num2str(sum(idxNoTinnitus))  ' / ' ...
    num2str(sum(idxTinnitusUnsure))  ])

%% ears
fprintf('\n')
leftEar=~[participant.leftEarDataIncomplete]  & ~iffy;
rightEar=~[participant.rightEarDataIncomplete]  & ~iffy;
disp([ num2str(sum(leftEar) + sum(rightEar)) ' complete ears measured'])
disp([ num2str(sum(leftEar & impaired) + sum(rightEar & impaired)) ...
    ' complete impaired ears measured'])
disp([ num2str(sum(leftEar & ~impaired) + sum(rightEar & ~impaired)) ...
    ' good ears measured'])
idxImpairedLeftEar=  leftEar & impaired;
idxImpairedRightEar= rightEar & impaired;
disp (['impaired right ear/ left ear = ' ...
    num2str(sum(idxImpairedRightEar)) ' / ' ...
    num2str(sum(idxImpairedLeftEar))  ])
idxNormalLeftEar=leftEar & normal;
idxNormalRightEar=rightEar==1 & normal;
disp (['normal right ear/ left ear = ' ...
    num2str(sum(idxNormalRightEar)) ' / ' ...
    num2str(sum(idxNormalLeftEar))   ])
